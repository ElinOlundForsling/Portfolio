{"version":3,"sources":["views/AboutMe.js","views/Landing.js","views/Footer.js","views/Contact.js","projects.js","views/Project.js","App.js","index.js"],"names":["AboutMe","className","animation","x","opacity","ease","style","transform","type","leaveReverse","Intro","id","Footer","Contact","useState","status","setStatus","email","setEmail","message","setMessage","useEffect","timer","setTimeout","clearTimeout","onSubmit","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","send","name","placeholder","value","onChange","e","projects","lc","desc","techStack","urlName","url","githubUrl","Project","project","reversed","setOpen","onClick","map","lang","src","alt","href","position","App","Landing","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbf91716.chunk.js","sourcesContent":["import React from 'react';\nimport TweenOne from 'rc-tween-one';\nimport ScrollOverPack from 'rc-scroll-anim/lib/ScrollOverPack';\nimport QueueAnim from 'rc-queue-anim';\n\nconst AboutMe = () => {\n  return (\n    <ScrollOverPack className='about'>\n      <TweenOne\n        key='image'\n        className='about-image'\n        animation={{ x: 0, opacity: 1, ease: 'easeOutQuad' }}\n        style={{ transform: 'translateX(-100px)', opacity: 0 }}\n      />\n      <QueueAnim type={'right'} className='about-text' key='text' leaveReverse>\n        <h2 key='h2'>Is this the droid that you seek?</h2>\n        <h1 key='h1'>Elin Ölund Forsling</h1>\n        <p key='p1'>\n          Hello, I'm an overbearing cat-mom and a very loving but often\n          neglectful plant-mom. I write excellent code and make excellent\n          cocktails. In a team, I'm the moodmaker, and I aspire to be the person\n          that automatically gets the onboarding duty, as I love meeting new\n          people, and to talk about code and the ins and outs and arounds of it.\n        </p>\n        <p key='p2'>\n          My past work experience include a lot of 3D art, from environment\n          artist on Minecraft: Dungeons to VFX artist for Hollywood productions,\n          and from that I'm used to fast-paced working environments, SCRUM,\n          AGILE workflows and an unexpected appriciation for McDonalds.\n        </p>\n        <p>\n          Recently, I graduated &lt;salt /&gt;, who hand-picked me and 33 others\n          among 1600 applicants for their full-stack development program. I'm\n          currently a consultant with them looking for full-time work.\n        </p>\n        <p key='p3'>\n          <b>I'm superb at these:</b> Javascript, Typescript, React, Hooks,\n          Redux, Express, Node, React Testing Liberary, Eslint, Kotlin, CSS,\n          MySql, MongoDB, Mongoose, Firebase\n          <br />\n          <b>I can also do these:</b> Java, Swift, ThreeJS, Kubernets, Amazon\n          Web Services Services, Babel, Webpack, Docker, SASS\n          <br />\n          <b>In dire times I'll do: </b> C#\n        </p>\n      </QueueAnim>\n    </ScrollOverPack>\n  );\n};\n\nexport default AboutMe;\n","import React from 'react';\n\nconst Intro = () => {\n  return (\n    <section className='landing'>\n      <div id='noise'>\n        <div className='app'>\n          <div className='landing-text'>\n            <h3>LOOKING FOR</h3>\n            <h1>EXCELLENT CODE?</h1>\n            <p>\n              I'm here to deliver full-stack solutions to whatever you might\n              need.\n            </p>\n            <p>Scroll to get your fancy tickled!</p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Intro;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className='footer'>\n      <p>All these right are belong to me©</p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport TweenOne from 'rc-tween-one';\nimport ScrollOverPack from 'rc-scroll-anim/lib/ScrollOverPack';\nimport QueueAnim from 'rc-queue-anim';\n\nconst Contact = () => {\n  const [status, setStatus] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (status === 'SUCCESS' || status === 'ERROR') {\n      const timer = setTimeout(() => {\n        setStatus('');\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [status]);\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader('Accept', 'application/json');\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        setStatus('SUCCESS');\n      } else {\n        setStatus('ERROR');\n      }\n    };\n    xhr.send(data);\n  };\n\n  return (\n    <ScrollOverPack className='contact'>\n      <QueueAnim\n        type={'right'}\n        className='contact-text'\n        key='text'\n        leaveReverse>\n        <h2 key='h2'>Contact</h2>\n        <p key='p'>\n          I'm currently employed by &lt;salt /&gt; as a consultant. If you're\n          interested in my services, please reach out to Sara at\n          sara@appliedtechnology.se\n        </p>\n        <p key='p'>For other matters, leave a message below :&#41;</p>\n        <form\n          className='contact-form'\n          onSubmit={handleSubmit}\n          action='https://formspree.io/f/xnqowkzw'\n          method='POST'>\n          <input\n            type='email'\n            name='_replyto'\n            placeholder='Email'\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <textarea\n            placeholder='Message'\n            name='message'\n            value={message}\n            onChange={e => setMessage(e.target.value)}\n          />\n          {status === 'SUCCESS' ? <p>Thanks!</p> : <button>Submit</button>}\n          {status === 'ERROR' && <p>Ooops! There was an error.</p>}\n        </form>\n      </QueueAnim>\n      <TweenOne\n        key='image'\n        className='contact-image'\n        animation={{ x: 0, opacity: 1, ease: 'easeOutQuad' }}\n        style={{ transform: 'translateX(-100px)', opacity: 0 }}\n      />\n    </ScrollOverPack>\n  );\n};\n\nexport default Contact;\n","const projects = [\n  {\n    name: 'Museion',\n    lc: 'museion',\n    desc:\n      \"My current baby that I'm working on, an online school portal, meant to enable students and teachers to more easily keep track of theirlesson plans, grades and schedules. The future plan is also to havean integrated video feature, to enable teachers to hold and savetheir lectures directly in the app. I'm incredibly excited for whatthe future holds for this app.\",\n    techStack: ['javascript', 'react', 'firebase'],\n    urlName: 'Live Demo',\n    url: 'https://museion-f9110.web.app/',\n    githubUrl: 'https://github.com/ElinOlundForsling/museion',\n  },\n  {\n    name: 'ECLIPSE',\n    lc: 'eclipse',\n    desc:\n      'Have you and your friends ever struggled with what movies you want to watch together? ECLIPSE is an android app with a solution. You and your friends sign up, add the movies you want to see, and then the app matches you the movies you both want to see, using the movie database API.',\n    techStack: ['kotlin'],\n    urlName: 'Figma',\n    url:\n      'https://www.figma.com/file/lST2JujCvGTUHFVGSR5wIh/Eclipse3?node-id=0%3A1',\n    githubUrl: 'https://github.com/ElinOlundForsling/eclipse',\n  },\n  {\n    name: 'listknife',\n    lc: 'listknife',\n    desc:\n      'Building a portfolio, speed has been key. And when you go fast in a project, scale and keeping it substantiable has got been a priority. So for this project, I have challenged that, with typescript, 50+ tests, the whole shebang. If you download the chat branch from github, that works too.',\n    techStack: ['typescript', 'react', 'firebase'],\n    urlName: 'Live Demo',\n    url: 'https://listknife.web.app/',\n    githubUrl: 'https://github.com/ElinOlundForsling/listknife',\n  },\n  {\n    name: 'AHOY',\n    lc: 'ahoy',\n    desc:\n      'AHOY was the graduation project I made at <salt /> with Jesper Zachrisson and Alexander Zagame. I implemented the chat feature, the interactive Pong game, the admin panel, made the design, and most of the routing.',\n    urlName: 'Live Demo',\n    techStack: ['javascript', 'react', 'redux', 'firebase'],\n    url: 'https://ahoy-9a920.web.app/',\n    githubUrl: 'https://github.com/ElinOlundForsling/ahoy',\n  },\n  {\n    name: 'Minesweeper',\n    lc: 'minesweeper',\n    desc:\n      'Minesweeper, minesweeper, does whatever, a minesweeper does. Three levels of difficulty, a highscore board hosted on firebase, timer and lots of logic, this Minesweeper is a one-day project, with the intent to learn more about how to utilise React in real-time.',\n    techStack: ['javascript', 'react', 'firebase'],\n    urlName: 'Live Demo',\n    url: 'https://minesweeper-4ebc6.web.app/',\n    githubUrl: 'https://github.com/ElinOlundForsling/minesweeper',\n  },\n  {\n    name: 'HEL',\n    lc: 'hel',\n    desc:\n      'HEL is an app I have made with the help of the Philips Hue API and the Google Speech API to create my own Siri to control the lights in my home. The end goal, is of course a system that randomly locks the doors in my home with a cheeky \"I\\'m afraid I can\\'t let you do that, Elin\".',\n    techStack: ['javascript', 'react'],\n    urlName: '',\n    url: '',\n    githubUrl: 'https://github.com/ElinOlundForsling/hel',\n  },\n];\n\nexport default projects;\n\n// {\n//     name: '',\n//     lc: '',\n//     desc: '',\n//     techStack: [javascript, react, firebase],\n//     urlName: 'Live Demo',\n//     url: '',\n//     githubUrl: 'https://github.com/ElinOlundForsling/',\n//   },\n","import React, { useState } from 'react';\nimport TweenOne from 'rc-tween-one';\nimport ScrollOverPack from 'rc-scroll-anim/lib/ScrollOverPack';\nimport QueueAnim from 'rc-queue-anim';\n\nconst Project = ({ project, reversed }) => {\n  const { name, lc, desc, techStack, urlName, url, githubUrl } = project;\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <ScrollOverPack className={`presentation ${reversed && 'reversed'}`}>\n        <TweenOne\n          key='image'\n          className={`${lc}-image presentation-image`}\n          animation={{ x: 0, opacity: 1, ease: 'easeOutQuad' }}\n          style={{ transform: 'translateX(-100px)', opacity: 0 }}\n          onClick={() => setOpen(true)}\n        />\n        <QueueAnim\n          type='right'\n          className='presentation-text'\n          key='text'\n          leaveReverse>\n          <h2 key='h2'>{name}</h2>\n          <ul className='language-list' key='ul'>\n            {techStack.map(lang => {\n              return (\n                <li>\n                  <img\n                    src={`/images/icons/${lang}.png`}\n                    className='language-icon'\n                    alt={lang}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n          <p key='p'>{desc}</p>\n          {url && (\n            <a href={url} key='a1'>\n              <button>{urlName}</button>\n            </a>\n          )}\n          <a href={githubUrl} key='a2'>\n            <button>Github</button>\n          </a>\n        </QueueAnim>\n      </ScrollOverPack>\n      {open && (\n        <dialog\n          className='dialog'\n          style={{ position: 'fixed' }}\n          open\n          onClick={() => setOpen(false)}>\n          <img\n            className='image'\n            src={`/images/screenshots/screenshot-${lc}.png`}\n            onClick={() => setOpen(false)}\n            alt={name}\n          />\n        </dialog>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n","import React from 'react';\nimport AboutMe from './views/AboutMe';\nimport Landing from './views/Landing';\nimport Footer from './views/Footer';\nimport Contact from './views/Contact';\nimport projects from './projects';\nimport Project from './views/Project';\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <Landing />\n      <AboutMe />\n      {projects.map((project, index) => {\n        return <Project project={project} reversed={index % 2} />;\n      })}\n      <Contact />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport './stylesheets/about-me.css';\nimport './stylesheets/landing.css';\nimport './stylesheets/presentation.css';\nimport './stylesheets/contact.css';\nimport './stylesheets/footer.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}